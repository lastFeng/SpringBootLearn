1. SecurityManager
	实现功能：
		Authentication  		认证
		Authorization			授权
		Session Management		session管理
		Cache Management		缓存管理
		Realm coordination		域合作
		Event propagation		事件传播
		“Remember Me” Services	RememberMe服务
		Subject creation		对象创建
		Logout and more			退出登录等等

2. 认证（Authentication）：证明一个User是不是存在
	Principals ：客体的认证属性--username、身份证等，最好的就是独一无二的属性
	Credentials ：客体安全值--密码、指纹等
	
	认证Subjects的过程：
		1. 收集subjects的principals和credentials
			//Example using most common scenario of username/password pair:
			// 收集subjects的principals和credentials
			UsernamePasswordToken token = new UsernamePasswordToken(username, password);
			
			// 设置Remember Me属性
			//"Remember Me" built-in: 
			token.setRememberMe(true);
			
			注意：UsernamePasswordToken不在乎提交的内容是什么，如果需要构建安全的协议，就需要自己实现接口AuthenticationToken，来实现自定义
		2. 提交收集的内容
			Subject currentUser = SecurityUtils.getSubject();
			// 通过login方法进行提交
			currentUser.login(token);
			
		3. 处理成功或失败
			// 通过提交，都是安静的进行，如果想知道是否成功，可以使用subject. isAuthenticated()的返回来确定。
			// 同时出现了某些异常（Shiro底层抛出），可以进行捕获，来进行分类
			try {
				currentUser.login(token);
			} catch ( UnknownAccountException uae ) { ...
			} catch ( IncorrectCredentialsException ice ) { ...
			} catch ( LockedAccountException lae ) { ...
			} catch ( ExcessiveAttemptsException eae ) { ...
			} ... catch your own ...
			} catch ( AuthenticationException ae ) {
				//unexpected error?
			}
		
	RememberMe 跟 已认证的区别：
		“记住我”：说明客体（Subject）不是匿名的，其subject.getPrincipals()可以获取身份，但这个身份是通过session记住了上一个认证。
					对于一个客体是否有该服务，可以使用subject.isRemembered()来判断 ---- “记住我”不能绝对保证客体的真实性
		已认证：说明一个客体通过完整的认证，比如在当前的客体Session中登录方法没有抛出异常---可以有绝对的保证来证明客体的真实性
		
		区别：“记住我”不能绝对保证客体的真实性，认证可以有绝对的保证来证明客体的真实性
		
	退出：
		// 移除该客体的所有认证信息和有效的session
		subject.logout()
	
	认证顺序：
		1. 登录
		2. 通过认证器来认证
		3. 根据域的认证策略来认证
		
	可以通过shiro.ini的配置文件，来配置自定义的认证器authenticator，默认为ModularRealmAuthenticator 
	可以通过shiro.ini的配置文件，来配置自定义的认证策略
	可以通过shiro.ini的配置文件，来配置Realm（域）认证的顺序
	
3. 授权（Authorization）：
	授权三大元素：
		权限（Permissions）：（CRUD：create, read, update, delete）
			权限可以是：打开文件、查看指定网页、打印文档、删除指定用户
			只是指定了能干什么，没有指定谁可以干什么（只指定了动作，没有指定对象）
			
			
		角色（Roles）：
		用户（Users）：
	
4. Session Management：
	Using Sessions：
		Subject currentUser = SecurityUtils.getSubject();

		Session session = currentUser.getSession();
		session.setAttribute( "someKey", someValue);
		
	The SessionManager:DefaultSessionManager
	
	Session Timeout: globalSessionTimeout
	
	Session Listeners:  SessionListenerAdapter
	
	