Spring 事务处理核心：
1. 隔离级别
	数据库事务知识：
		1. Atomic 原子性：要么成功，要么失败
		2. Consistency 一致性：事务完成时，所有数据都保持一致状态
		3. Isolation 隔离性： 压抑丢失更新的问题
				丢失更新：多个事务同时访问同一记录到时数据出现不一致的情况
					第一类丢失更新：多个事务对同一个记录进行操作，有提交有回滚
					第二类丢失更新：多个事务进行数据提交，出现数据不一致的情况
		4. Durability 持久性： 事务结束后，所有的数据会固化到一个地方
	
	4类隔离级别：未提交读、读写提交、可重复读、串行化
		1. 未提交读（read uncommitted）：出现脏读的情况，高并发，但是最危险的隔离级别
		2. 读写提交（read committed）：克服了脏读，但是出现不可重复读的问题
		3. 可重复读：解决了不可重复读的情况，但是会出现幻读   MYSQL默认隔离级别
		4. 串行化：最高隔离级别，但是要付出锁的代价
		
			示例解释
			脏读：事务A读取了事务B更新的数据，然后事务B回滚了，那么A读到的数据就是脏数据
			不可重复读：事务A多次读取同一数据，事务B在A多次读取的过程中，对数据进行了更新提交，导致事务A多次读取的数据不一致
			幻读：事务A查询了多条数据库中的统计结果，但事务B对数据进行了增加或删除，导致事务A的数据为进行修改
				不可重复读和幻读的区别是：1. 不可重复读侧重于修改，幻读侧重于增加或删除 2. 不可重复读针对一条数据，幻读针对多条数据
				
2. 传播行为
	对于数据库批量处理的过程中，事务并非是要么全部成功，要么全部失败。在极少数事务发生回滚时，只回滚这些事务，而其他事务正常提交